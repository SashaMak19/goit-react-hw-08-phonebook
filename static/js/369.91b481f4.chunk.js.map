{"version":3,"file":"static/js/369.91b481f4.chunk.js","mappings":"0OACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA+F,6BAA/F,EAAsI,8BAAtI,EAA4K,4B,UCKtKA,EAAc,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvBC,EAAe,SAAAC,GACnB,IAAMC,EAAYD,EAAEE,cAAcZ,KAC5Ba,EAAaH,EAAEE,cAAcE,MAEnC,OAAQH,GACN,IAAK,OACHV,EAAQY,GACR,MACF,IAAK,SACHV,EAAUU,GACV,MACF,QACE,OAEL,EAeKE,EAAQ,WACZd,EAAQ,IACRE,EAAU,GACX,EAED,OACE,iBAAMa,SAnBa,SAAAN,GAMnB,GALAA,EAAEO,iBACwBX,EAASY,MACjC,qBAAGlB,KACImB,gBAAkBT,EAAEE,cAAcZ,KAAKc,MAAMK,aADpD,IAIA,OAAOC,MAAM,GAAD,OAAIV,EAAEE,cAAcZ,KAAKc,MAAzB,4BAEdV,GAASiB,EAAAA,EAAAA,IAAW,CAAErB,KAAAA,EAAME,OAAAA,KAC5Ba,GACD,EAQ+BO,UAAWC,EAAzC,UACE,iBAAKD,UAAWC,EAAhB,WACE,mBAAOD,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXC,KAAK,OACLxB,KAAK,OACLyB,QAAQ,0GACRC,MAAM,yIACNC,UAAQ,EACRb,MAAOd,EACP4B,SAAUnB,QAGd,mBAAOa,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACXC,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRb,MAAOZ,EACP0B,SAAUnB,QAGd,mBAAQe,KAAK,SAASF,UAAWC,EAAjC,6BAMP,EChFD,GAAgB,KAAO,+BAA+B,KAAO,+BAA+B,OAAS,kCCK/FM,EAAkB,WACtB,IAAMC,GCJyBvB,EAAAA,EAAAA,IAAYwB,EAAAA,IDKrC3B,GAAWC,EAAAA,EAAAA,MAMjB,OAJA2B,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,MACV,GAAE,CAAC7B,KAGF,eAAIkB,UAAWC,EAAAA,KAAf,SACGO,EAAiBI,KAAI,gBAAGlC,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQiC,EAAjB,EAAiBA,GAAjB,OACpB,gBAAab,UAAWC,EAAAA,KAAxB,WACE,kBAAMD,UAAWC,EAAAA,KAAjB,UAA+BvB,EAA/B,QACA,0BAAOE,KACP,mBACEsB,KAAK,SACLY,QAAS,kBAAMhC,GAASiC,EAAAA,EAAAA,IAAcF,GAA7B,EACTb,UAAWC,EAAAA,OAHb,sBAHOY,EADW,KAe3B,E,UE9BD,EAAwB,sBAAxB,EAA4D,4BCItDG,EAAS,WACb,IAAMlC,GAAWC,EAAAA,EAAAA,MACXkC,GCJuBhC,EAAAA,EAAAA,IAAYiC,EAAAA,IDMzC,OACE,mBAAOlB,UAAWC,EAAlB,mCAEE,kBACED,UAAWC,EACXC,KAAK,OACLV,MAAOyB,EACPX,SAAU,SAAAlB,GAAC,OAAIN,GAASqC,EAAAA,EAAAA,GAAe/B,EAAEE,cAAcE,OAA5C,MAIlB,EEnBD,EAA4B,8BAA5B,EAAiF,yCCgBjF,EAZkB,kBAChB,iBAAKQ,UAAWC,EAAhB,WACE,wCACA,SAACzB,EAAD,KACA,sCACA,iBAAKwB,UAAWC,EAAhB,WACE,SAACe,EAAD,KACA,SAACT,EAAD,SAPY,C","sources":["webpack://react-homework-template/./src/components/SectionForm/section-form.module.css?107c","components/SectionForm/SectionForm.jsx","webpack://react-homework-template/./src/components/SectionContacts/section-contacts.module.css?796d","components/SectionContacts/SectionContacts.jsx","hooks/useContacts.js","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","hooks/useFilter.js","webpack://react-homework-template/./src/pages/PhoneBook/phone-book.module.css?e1d7","pages/PhoneBook/PhoneBook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"section-form_form__pxhEa\",\"input\":\"section-form_input__Ha1do\",\"button\":\"section-form_button__2+UlW\",\"wrapper\":\"section-form_wrapper__Z1MNf\",\"label\":\"section-form_label__Ei4-9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations/operations';\nimport { selectAllContacts } from 'redux/selectors/selectors';\nimport styles from './section-form.module.css';\n\nconst SectionForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleChange = e => {\n    const nameInput = e.currentTarget.name;\n    const valueInput = e.currentTarget.value;\n\n    switch (nameInput) {\n      case 'name':\n        setName(valueInput);\n        break;\n      case 'number':\n        setNumber(valueInput);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isExistingContact = contacts.find(\n      ({ name }) =>\n        name.toLowerCase() === e.currentTarget.name.value.toLowerCase()\n    );\n    if (isExistingContact) {\n      return alert(`${e.currentTarget.name.value} is already in contacs.`);\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <div className={styles.wrapper}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport { SectionForm };\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"section-contacts_list__IT6z9\",\"item\":\"section-contacts_item__brpZN\",\"button\":\"section-contacts_button__IZzb3\"};","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from 'redux/operations/operations';\nimport { useContacts } from 'hooks/useContacts';\nimport styles from './section-contacts.module.css';\n\nconst SectionContacts = () => {\n  const filteredContacts = useContacts();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={styles.list}>\n      {filteredContacts.map(({ name, number, id }) => (\n        <li key={id} className={styles.item}>\n          <span className={styles.span}>{name}:</span>\n          <span>{number}</span>\n          <button\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n            className={styles.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport { SectionContacts };\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors/selectors';\n\nexport const useContacts = () => useSelector(selectFilteredContacts);\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__nHxuJ\",\"filterInput\":\"filter_filterInput__2T6yn\"};","import { useDispatch } from 'react-redux';\nimport { useFilter } from 'hooks/useFilter';\nimport { filterContacts } from 'redux/slices/filterSlice';\nimport styles from './filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const inputValue = useFilter();\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        value={inputValue}\n        onChange={e => dispatch(filterContacts(e.currentTarget.value))}\n      ></input>\n    </label>\n  );\n};\n\nexport { Filter };\n","import { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors/selectors';\n\nexport const useFilter = () => useSelector(selectFilter);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"phone-book_container__7dkqW\",\"contactListContainer\":\"phone-book_contactListContainer__T0n6D\"};","import { SectionForm } from 'components/SectionForm/SectionForm';\nimport { SectionContacts } from 'components/SectionContacts/SectionContacts';\nimport { Filter } from 'components/Filter/Filter';\nimport styles from './phone-book.module.css';\n\nconst PhoneBook = () => (\n  <div className={styles.container}>\n    <h2>Phone book</h2>\n    <SectionForm />\n    <h2>Contacts</h2>\n    <div className={styles.contactListContainer}>\n      <Filter />\n      <SectionContacts />\n    </div>\n  </div>\n);\n\nexport default PhoneBook;\n"],"names":["SectionForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","selectAllContacts","handleChange","e","nameInput","currentTarget","valueInput","value","reset","onSubmit","preventDefault","find","toLowerCase","alert","addContact","className","styles","type","pattern","title","required","onChange","SectionContacts","filteredContacts","selectFilteredContacts","useEffect","fetchContacts","map","id","onClick","deleteContact","Filter","inputValue","selectFilter","filterContacts"],"sourceRoot":""}